// By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6th prime is 13.
// What is the 10 001st prime number?

fn isPrime(n: u32) -> bool {
    if n == 2 {return true;}
	if n == 0 || n == 1 || n % 2 == 0 {return false;}
    let i = 2;
    let n2:f64 = n;
	while i <= ((n2).sqrt()).ceil() {
		if n % i == 0 {return false}
    }
    return true;
}

fn main() {
    println!("{}", isPrime(59));
}
